<div class="album-item-gallery">
  <template id="template">
    <a
      href=""
      data-pswp-width=""
      data-pswp-height=""
      target="_blank"
      class="album-item"
    >
      <img src="" alt="" loading="lazy" class="image" />
    </a>
  </template>
</div>

<style>
  .album-item-gallery {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    list-style: none;
    min-height: 50vh;
    padding: 0;
  }

  .album-item {
    aspect-ratio: 1 / 1;

    .image {
      object-fit: cover;
      height: 100%;
      width: 100%;
    }
  }

  @media (min-width: 600px) {
    .album-item-gallery {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
  }
</style>

<link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/5.4.4/photoswipe.min.css"
/>

<script>
  import PhotoSwipeLightbox from "@/assets/photoswipe-lightbox.esm.min.js";
  import PhotoSwipe from "@/assets/photoswipe.esm.min.js";
  import { ENDPOINT_MEDIA_PATH } from "@/constants/config";
  import { fetchFileList } from "@/scripts/fetchFileList";

  const GALLERY_PATH = "youth-fellowship-camp-2025/photo-gallery/";
  const ENDPOINT = `${ENDPOINT_MEDIA_PATH}${GALLERY_PATH}`;

  (async () => {
    const template = document.getElementById("template") as HTMLTemplateElement;
    const div = document.querySelector(".album-item-gallery") as HTMLDivElement;
    const fragment = document.createDocumentFragment();

    try {
      const res = await fetchFileList(GALLERY_PATH);

      if (res.status !== "success") {
        console.error("fetchFileList error:", res.message);
        return;
      }

      const files = res.list.filter((item) => item.type === "file").reverse();

      for (const file of files) {
        const clone = template.content.cloneNode(true) as DocumentFragment;
        const a = clone.querySelector(".album-item") as HTMLAnchorElement;
        const image = clone.querySelector(".image") as HTMLImageElement;

        image.src = `${ENDPOINT}thumb/${file.name}`;
        image.onload = () => {
          a.href = `${ENDPOINT}${file.name}`;
          a.dataset.pswpWidth = `${image.naturalWidth * 2}`;
          a.dataset.pswpHeight = `${image.naturalHeight * 2}`;
        };

        fragment.appendChild(clone);
      }

      div.appendChild(fragment);

      const lightbox = new PhotoSwipeLightbox({
        gallery: ".album-item-gallery",
        children: ".album-item",
        pswpModule: PhotoSwipe,
      });

      lightbox.init();
    } catch (err) {
      console.error("Unexpected error in createAlbum:", err);
    }
  })();
</script>
